@model Fintech.Models.HouseHoldViewModel
@if (Model.isJoinHouseHold)
{
<h2>Create a new HouseHold Account</h2>

using (Html.BeginForm("CreateHouseHold", "Home", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>HouseHold</h4>
        <hr />

       

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.Label("HouseHold Name")
            <div class="col-md-10">
                @Html.LabelFor(model => model.HHName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.HHName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<hr />
}

@*/////////////////////////////////////////////////////////////////////////*@

else
{


<h2>Join an existing HouseHold</h2>

using (Html.BeginForm("JoinHouseHold", "Home", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model=>model.HHId)

    <div class="form-horizontal">
        <h4>HouseHold</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })


        @*<div class="form-group">
            @Html.LabelFor(model => model.HHName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.HHName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.HHName, "", new { @class = "text-danger" })
            </div>
        </div>*@






        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Join" class="btn btn-default" />
            </div>
        </div>
    </div>
}
}



<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}


